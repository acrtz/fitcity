{"version":3,"sources":["../../src/plugins/MutationPlugin.js"],"names":["isValidMutation","Mutation","Object","keys","getFields","length","e","MutationPlugin","builder","hook","schema","build","newWithHooks","extend","graphql","GraphQLObjectType","name","description","isRootMutation","mutation"],"mappings":";;;;;;;AAGA,SAASA,eAAT,CAAyBC,QAAzB,EAAmC;AACjC,MAAI;AACF,QAAI,CAACA,QAAL,EAAe;AACb,aAAO,KAAP;AACD;AACD,QAAIC,OAAOC,IAAP,CAAYF,SAASG,SAAT,EAAZ,EAAkCC,MAAlC,KAA6C,CAAjD,EAAoD;AAClD,aAAO,KAAP;AACD;AACF,GAPD,CAOE,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACD,SAAO,IAAP;AACD;;kBAEe,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AACrDA,UAAQC,IAAR,CAAa,eAAb,EAA8B,CAACC,MAAD,EAAaC,KAAb,KAAuB;AACnD,UAAM,EAAEC,YAAF,EAAgBC,MAAhB,EAAwBC,SAAS,EAAEC,iBAAF,EAAjC,KAA2DJ,KAAjE;AACA,UAAMV,WAAWW,aACfG,iBADe,EAEf;AACEC,YAAM,UADR;AAEEC,mBACE;AAHJ,KAFe,EAOf,EAAEC,gBAAgB,IAAlB,EAPe,EAQf,IARe,CAAjB;AAUA,QAAIlB,gBAAgBC,QAAhB,CAAJ,EAA+B;AAC7B,aAAOY,OAAOH,MAAP,EAAe;AACpBS,kBAAUlB;AADU,OAAf,CAAP;AAGD,KAJD,MAIO;AACL,aAAOS,MAAP;AACD;AACF,GAnBD;AAoBD,C","file":"MutationPlugin.js","sourcesContent":["// @flow\nimport type { Plugin } from \"../SchemaBuilder\";\n\nfunction isValidMutation(Mutation) {\n  try {\n    if (!Mutation) {\n      return false;\n    }\n    if (Object.keys(Mutation.getFields()).length === 0) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\nexport default (async function MutationPlugin(builder) {\n  builder.hook(\"GraphQLSchema\", (schema: {}, build) => {\n    const { newWithHooks, extend, graphql: { GraphQLObjectType } } = build;\n    const Mutation = newWithHooks(\n      GraphQLObjectType,\n      {\n        name: \"Mutation\",\n        description:\n          \"The root mutation type which contains root level fields which mutate data.\",\n      },\n      { isRootMutation: true },\n      true\n    );\n    if (isValidMutation(Mutation)) {\n      return extend(schema, {\n        mutation: Mutation,\n      });\n    } else {\n      return schema;\n    }\n  });\n}: Plugin);\n"]}