{"version":3,"sources":["../../src/plugins/SubscriptionPlugin.js"],"names":["isValidSubscription","Subscription","Object","keys","getFields","length","e","SubscriptionPlugin","builder","hook","schema","build","newWithHooks","extend","graphql","GraphQLObjectType","name","description","isRootSubscription","subscription"],"mappings":";;;;;;;AAGA,SAASA,mBAAT,CAA6BC,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAI,CAACA,YAAL,EAAmB;AACjB,aAAO,KAAP;AACD;AACD,QAAIC,OAAOC,IAAP,CAAYF,aAAaG,SAAb,EAAZ,EAAsCC,MAAtC,KAAiD,CAArD,EAAwD;AACtD,aAAO,KAAP;AACD;AACF,GAPD,CAOE,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACD,SAAO,IAAP;AACD;;kBAEe,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AACzDA,UAAQC,IAAR,CAAa,eAAb,EAA8B,CAACC,MAAD,EAAaC,KAAb,KAAuB;AACnD,UAAM,EAAEC,YAAF,EAAgBC,MAAhB,EAAwBC,SAAS,EAAEC,iBAAF,EAAjC,KAA2DJ,KAAjE;AACA,UAAMV,eAAeW,aACnBG,iBADmB,EAEnB;AACEC,YAAM,cADR;AAEEC,mBACE;AAHJ,KAFmB,EAOnB,EAAEC,oBAAoB,IAAtB,EAPmB,EAQnB,IARmB,CAArB;AAUA,QAAIlB,oBAAoBC,YAApB,CAAJ,EAAuC;AACrC,aAAOY,OAAOH,MAAP,EAAe;AACpBS,sBAAclB;AADM,OAAf,CAAP;AAGD,KAJD,MAIO;AACL,aAAOS,MAAP;AACD;AACF,GAnBD;AAoBD,C","file":"SubscriptionPlugin.js","sourcesContent":["// @flow\nimport type { Plugin } from \"../SchemaBuilder\";\n\nfunction isValidSubscription(Subscription) {\n  try {\n    if (!Subscription) {\n      return false;\n    }\n    if (Object.keys(Subscription.getFields()).length === 0) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\nexport default (async function SubscriptionPlugin(builder) {\n  builder.hook(\"GraphQLSchema\", (schema: {}, build) => {\n    const { newWithHooks, extend, graphql: { GraphQLObjectType } } = build;\n    const Subscription = newWithHooks(\n      GraphQLObjectType,\n      {\n        name: \"Subscription\",\n        description:\n          \"The root subscription type which contains root level fields which mutate data.\",\n      },\n      { isRootSubscription: true },\n      true\n    );\n    if (isValidSubscription(Subscription)) {\n      return extend(schema, {\n        subscription: Subscription,\n      });\n    } else {\n      return schema;\n    }\n  });\n}: Plugin);\n"]}